#! /Library/Frameworks/Python.framework/Versions/3.7/bin/python3
import sys
def txtSplit(justTXT):
        newTXT = []
        if " " in justTXT:
            lastWhitespaceIndex = -1
            componentStartIndex = 0
            i = 0
            for character in justTXT: #loop and split as close to 255 at space
                if character is " ": #if space is found, index it
                    lastWhitespaceIndex = i
                if (i - componentStartIndex == 255): #if 255 hit, go back
                    componentStartIndex = (i+1)
                    newTXT[lastWhitespaceIndex] = (character, " \"\"")
                    newTXT.append(character)  
                else:
                    newTXT.append(character)
                i+=1
        else:
            counter = 0
            quotePosition = 255
            for character in justTXT: #split at 255
                counter += 1
                if (counter == quotePosition):
                    character = (character, "\"\"")
                    newTXT.append(character, "\"\"")
                    quotePosition += 255
                else:
                    newTXT.append(character)
        finalTXT = (justTXT[1], "\"", newTXT)
        return finalTXT
        


if len(sys.argv) <= 1: #if there is no argument passed
    print ("")
    print ("This script will turn a zone file into the correct format for DNS Made Easy.")
    print ("--- Incorrect Syntax ----")
    print ("Usage: zone <zone file>")
    print ("Example: zone dnsmadeeasy.txt")
    print ("Example: zone constellix.txt")
    print ("")
else:
    zone=sys.argv[1] #set to first argument
    origin = (str(input("What is the origin domain?\n")))
    originDot = (origin+".")
    dotOrigindot = ("."+origin+".") #all variations found
    print("Here is your fixed zone:\n\n")
    if "ORIGIN" not in zone:
        print ("$ORIGIN "+origin) #add the origin
    fh = open(zone)
    for line in fh: #run file line by line
        if ";" in line: #remove comments
            continue
        if "ORIGIN" not in line: #remove the origin domain from the FQDN
            removeDomain1 = line.replace(dotOrigindot, "")
            removeDomain2 = removeDomain1.replace(originDot, "@")
            removeDomain3 = removeDomain2.replace(origin, "@")
        else:
            continue #don't print if $ORIGIN is in the line
        if "SOA" in line:
            continue #get rid of the SOA
        elif "CNAME" in line:  #all of these grab the record type or lack thereof
            recordType="CNAME"
        elif "A" in line:
            recordType="A"
        elif "TXT" in line:
            recordType="TXT"
        elif "SPF" in line:
            recordType="SPF"
        elif "MX" in line:
            recordType="MX"
        elif "CAA" in line:
            recordType="CAA"
        elif "PTR" in line:
            recordType="PTR"
        elif "SRV" in line:
            recordType="SRV"
        elif "NS" in line:
            recordType="NS"
        else:
            recordType="none"
        if (recordType != "none"):
            if "IN" not in line:
                withIn = ("IN\t"+recordType)
                output = removeDomain3.replace(recordType, withIn)
            else:
                output = removeDomain3
        else:
            continue
        if (recordType == "NS"):
            if "@" in output:
                continue
        if (recordType == "CNAME"):
            if "@\tIN" in output:
                print("\033[1;31;40m ERROR: CANNOT HAVE CNAME FOR THE ROOT DOMAIN  \n")
                break
        if (recordType == "SRV"):
            if "@" in output:
                print("\033[1;31;40m ERROR: CANNOT HAVE SRV FOR THE ROOT DOMAIN  \n")
                break
        if (recordType == "TXT"):
            splitLine = output.split("\"") #split at quotation
            justTXT = splitLine[1] #grab the TXT
            recordLength = len(justTXT)
            if (recordLength > 255): #if it's more than 255 characters
                output = txtSplit(justTXT)
        if line.strip():
            strippedOutput = output.strip('\n')
            print(strippedOutput)
    fh.close()
